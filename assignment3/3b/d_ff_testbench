`timescale 1ns / 1ps

module d_flip_flop_tb;

    reg clk, rst, d;
    wire q;

    // Instantiate the D Flip-Flop
    d_flip_flop uut (
        .clk(clk),
        .rst(rst),
        .d(d),
        .q(q)
    );

    // Clock generator: 10ns period
    always #5 clk = ~clk;

    initial begin
        // Initialize signals
        clk = 0;
        rst = 1;
        d = 0;

        // Dump file for waveform viewing
        $dumpfile("dff.vcd");
        $dumpvars(0);

        // Reset and test behavior
        #10 rst = 0; d = 1;
        #10 d = 0;
        #10 d = 1;
        #10 d = 1;
        #10 rst = 1; // Apply async reset
        #10 rst = 0; d = 0;
        #10 d = 1;
        #30 $finish;
    end

endmodule
